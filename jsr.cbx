\ProvidesFile{jsr.cbx}[2022/11/30\space v1.0\space JSR biblatex citation style]

\RequireCitationStyle{authoryear-comp}

%% オプションの設定
\ExecuteBibliographyOptions{%
maxcitenames=2,% 3人以上は「〜ら」とする
mincitenames=1,% あたりまえ体操
uniquelist=minyear,% 発行年が違えば著者名を追跡して曖昧さを判断しない
uniquename=full,% 同年の同じ名字の著作があった場合、英語はイニシャルを、日本語は名前を表示させる
sortcites=true,% 引用をymdでソートする
}

% 引用ごとに言語を判断して処理
\AtEveryCitekey{%
  \ifthenelse{\equal{\thefirstlistitem{language}}{japanese}}{%
      \setboolean{japanese}{true}%
    }{%
      \setboolean{japanese}{false}%
    }%
  \global\boolfalse{cbx:warichu}%割注かどうかの判断%
}%


% ================================================================================
% 表現の調整パート
% ================================================================================

% et alが重複して表示されないようにする
\DefineBibliographyStrings{english}{andothers={}}


% デリムの調整
% ================================================================================

% グローバル
\DeclareDelimFormat[textcite,parencite]{nameyeardelim}{\addspace}%著者名と出版年の区切りは半角スペース
\DeclareDelimFormat{transeq}{\unspace=}%翻訳書の場合のイコール

% parenciteのとき
\DeclareDelimFormat[parencite]{multinamedelim}% 人の著者名の間
  {\ifthenelse{\boolean{japanese}}{\unspace{・}}{\addcomma\space}}%
\DeclareDelimFormat[parencite]{finalnamedelim}% 3人以上のときの著者名の間（つかわないと思う）
  {\ifthenelse{\boolean{japanese}}{\unspace{・}}%
    {\ifnumgreater{\value{liststop}}{2}{\finalandcomma}{}\addthinspace\&\thinspace}}%
\DeclareDelimFormat[parencite]{andothersdelim}% 3人以上のときの最後の文字
  {\ifthenelse{\boolean{japanese}}{\unspace{ほか}}{\addspace{et al.}}}%

% textciteのとき（スタイルガイドに明確な定義はなし）
\DeclareDelimFormat[textcite,citeauthor]{multinamedelim}{\unspace{と}}% 和英どちらも「と」にしてみた
\DeclareDelimFormat[textcite,citeauthor]{finalnamedelim}{\unspace{と}}% 和英どちらも「と」にしてみた
  %{\ifthenelse{\boolean{japanese}}{\unspace{・}}%
    %{\ifnumgreater{\value{liststop}}{2}{\finalandcomma}{}\addthinspace\&\thinspace}}%
\DeclareDelimFormat[textcite,citeauthor]{andothersdelim}{\unspace{ら}}% 3人以上のときの最後の文字

% FiledFormatの宣言
% ================================================================================

%書籍タイトル関係
\DeclareFieldFormat{citetitle}{『#1』}% 基本は和英関わらず二重鉤かっこ
\DeclareFieldFormat
  [article,inbook,incollection,inproceedings,patent,thesis,unpublished]
  {citetitle}{「#1」}% 論文名などは鉤かっこ
\DeclareFieldFormat
  [suppbook,suppcollection,suppperiodical]
  {citetitle}{#1}% なんかあった、たぶん使わない

% ページ数関係
\DeclareFieldFormat{postnote}% ページ範囲の圧縮「123-125」を「123-5」に
  {\mkcomprange{#1}}%
\DeclareDelimFormat{postnotedelim}
  {\addcolon\addthinspace}%  発行年とページ数の区切りをコロンとスペースに
\DeclareDelimFormat{multipostnotedelim}
  {\nopunct}% 複数ページ数が表示された際に、余計なコンマなどを入れない


% 新しいコマンドの定義
% ================================================================================

%全角丸かっこ関連
\newcommand{\jpparenopen}{\unspace（}%全角丸かっこ開き
\newcommand{\jpparenclose}{\unspace）}%全角丸かっこ閉じ
\newcommand{\mkbibjpparens}[1]{\unspace{（}#1\unspace{）}}%全角丸かっこ

% 複数citesコマンドを並べたときの区切り文字（文書全体で変更）
\renewcommand*{\textcitedelim}{%
  \iftoggle{bbx:engmode}{%
    \iffinalcitedelim{%
      \ifnumgreater{\value{textcitetotal}}{2}
        {\iftextcitepunct{\finalandsemicolon}{\finalandcomma}}{}%
      \addspace\bibstring{and}}%
      {\iftextcitepunct{\addsemicolon}{\addcomma}}%
    \space%
  }{%
    \iffinalcitedelim{%
      \ifnumequal{\value{textcitetotal}}{2}{%
        \printtext{と}%
      }{%
        \printtext{，}%
        \iffinalcitedelim{\printtext{および}}{}%
      }%
    }{\printtext{，}}%
  }%
}

% relatedフィールドまで遡ったときにlanguageを判断するために
\newbibmacro*{isJPorEN}%
  {\ifthenelse{\equal{\thefirstlistitem{language}}{japanese}}%
    {\setboolean{japanese}{true}}%
    {\setboolean{japanese}{false}}%
  }%


%%==========新しい変数の定義==========
\newbool{cbx:samename}%
\newbool{cbx:warichu}%
\newbool{cbx:giveninits}%
\global\booltrue{cbx:giveninits}%

%%==========お名前調整==========

%% 曖昧さ回避の場合の「他」の前のコンマを削除
\renewbibmacro*{name:andothers}{%
  \ifthenelse{\equal{\value{listcount}}{\value{liststop}}\AND\ifmorenames}{%
    \ifthenelse{\boolean{japanese}}{}{%  
      \ifnumgreater{\value{liststop}}{1}%
        {\finalandcomma}%
        {}}%
    \printdelim{andothersdelim}}%
{}}%

%labelnameをuniquenameをつかって出力するときの名前フォーマット
\newbibmacro{apply:uniquename}[3]{%
  \ifthenelse{\value{listcount}>1\OR\ifuniqueprimaryauthor}%
    {\setcounter{uniquename}{0}}%
    {}%
  \ifthenelse{\boolean{japanese}}{% 日本語の場合
    \ifcase\value{uniquename}%
      {\usebibmacro{name:#1}%通常（佐藤）、フルネーム出力の場合はフルネーム
        {\namepartfamily}{\namepartgiven}{\relax}{\relax}}% 
    \or%
      {\usebibmacro{name:family-given}%名前まで（佐藤健二）
        {\namepartfamily}{\namepartgiven}{\relax}{\relax}}% 
    \or%
      {\usebibmacro{name:family-given}%上に同じ
        {\namepartfamily}{\namepartgiven}{\relax}{\relax}}% 
    \fi%
  }{%
    \ifcase\value{uniquename}% 日本語以外の場合
      \ifuseprefix% familyで特定できる場合、フルネームのときはgiveni
        {\usebibmacro{name:#2}%
          {\namepartfamily}{\namepartgiveni}{\namepartprefix}{\relax}}%
        {\usebibmacro{name:#2}%
          {\namepartfamily}{\namepartgiveni}{\relax}{\relax}}%
    \or%
      \ifuseprefix% giveniで特定できる場合
        {\usebibmacro{name:#3}%
          {\namepartfamily}{\namepartgiveni}{\namepartprefix}{\relax}}%
        {\usebibmacro{name:#3}%
          {\namepartfamily}{\namepartgiveni}{\relax}{\relax}}%
    \or%
      \ifuseprefix% givenをつかってフルネーム表記
        {\usebibmacro{name:#3}%
          {\namepartfamily}{\namepartgiven}{\namepartprefix}{\relax}}%
        {\usebibmacro{name:#3}%
          {\namepartfamily}{\namepartgiven}{\relax}{\relax}}%
    \fi%
  }%
  \usebibmacro{name:andothers}%
}%

\DeclareNameFormat{labelname}%一般的なlabelname
  {\usebibmacro{apply:uniquename}%
    {family}%日本語uniqunameLv1
    {family}%外国語uniqunameLv1
    {given-family}}%外国語uniqunameLv2〜
\DeclareNameFormat{labelname:parencite}%parenciteのときの、必ずfamilyが先の場合
  {\usebibmacro{apply:uniquename}%
    {family}%日本語uniqunameLv1
    {family}%外国語uniqunameLv1
    {family-given}}%外国語uniqunameLv2〜
\DeclareNameFormat{labelname:fullname}%最初に引用したときのフルネーム用
  {\usebibmacro{apply:uniquename}%
    {family-given}%
    {given-family}%
    {given-family}}%

\DeclareNameAlias{translator}{labelname}
\DeclareNameAlias{origauthor}{labelname}


%%%====================
%
% 実際の処理パート
%
%%%====================

%%% 引用形式定義 %%%
%% 最初の引用時はフルネーム %%
\newbibmacro*{citecheck}{%
  \ifciteseen{%
    \printnames{labelname}%
  }{%
    \printnames[labelname:fullname]{labelname}%
  }%
}%

%%% 曖昧さを考慮したlabelnameとed-edsを、
%%% relatedが途切れるまで追跡して出力する
\newbibmacro*{cite:uniquename}{%
  \iffieldundef{related}{%
    \unspace%
    \ifbool{cbx:warichu}%
      {\printnames[labelname:parencite]{labelname}}%
      {\usebibmacro{citecheck}}%
    \ifboolexpr{%
      test {\ifnameundef{author}}%
      and%
      not test {\ifnameundef{editor}}%
    }%
      {\setunit{\printdelim{editortypedelim}}%
      \usebibmacro{ed-eds:editor}}%
    {}%
  }{%
    \iffieldequalstr{relatedtype}{mvbook}{%
      \unspace%
      \printnames{labelname}%
    }{%
      \entrydata*{\thefield{related}}{%
        \usebibmacro{isJPorEN}%
        \usebibmacro{cite:uniquename}%
      }%
    }%
  }%
}%

%% namehashが同じかどうかをrelatedが途切れるまで遡って判断する
\newbibmacro*{check:samename}{%
  \iffieldundef{related}{%
    \iffieldequals{namehash}{\cbx@lasthash}{%
      \global\booltrue{cbx:samename}%
    }{%
      \global\boolfalse{cbx:samename}%
    }%
  }{%
    \entrydata*{\thefield{related}}{%
      \usebibmacro*{check:samename}%
    }%
  }%
}%

%% namehashをrelatedが途切れるまで遡って保存する
\newbibmacro{save:namehash}{%
  \iffieldundef{related}{% namehashの保存
    \savefield{namehash}{\cbx@lasthash}% relatedが設定されていない場合は素直にnamehashを保存
  }{% relatedが設定されている場合は設定先のnamehashを遡って保存
    \entrydata*{\thefield{related}}{%
      \usebibmacro{save:namehash}%
    }%
  }%
}%

%%% author et al.(year: pages) %%%
%% 本体 %%
\renewbibmacro*{textcite}{%
  \global\boolfalse{cbx:warichu}%
  \usebibmacro*{check:samename}%
  \ifbool{cbx:samename}{% 同じ著者の引用が複数続く場合は区切り文字と出版年のみを表示
    \setunit{\compcitedelim}%
    \usebibmacro{cite:plabelyear+extradate}%
  }{%引用開始
    \ifbool{cbx:parens}{% parenが開いていれば
      \jpparenclose% 全角閉じ丸かっこを挿入し
      \global\boolfalse{cbx:parens}% cbx:parensをfalseにする
    }{}%
    \setunit{\textcitedelim}% 複数引用時のデリムの追加
    \ifnameundef{origauthor}{% 著者名 日本語訳の書籍の場合は，原著者の名前を原語表記
      \usebibmacro{cite:uniquename}%
    }{%
      \printnames{origauthor}% 再録の場合のオリジナル出力
    }%
    \setunit{%
      \global\booltrue{cbx:parens}% cbx:parensでparenをopenの状態に
      \printdelim{nameyeardelim}% 著者名と出版年の区切り
      \jpparenopen% 全角開き丸かっこを挿入
    }%「prenote」の処理
    \ifnumequal{\value{citecount}}{1}{%
      \usebibmacro{prenote}%
      }{}%
    % 出版年
    \usebibmacro{cite:plabelyear+extradate}%
    % 著者名ハッシュの一時保存
    \usebibmacro{save:namehash}%
    \stepcounter{textcitecount}%
  }%
}%

%% textciteの終わりを全角かっこに変更
\renewbibmacro*{textcite:postnote}%
{\usebibmacro{postnote}%
\ifthenelse{\value{multicitecount}=\value{multicitetotal}}%
  {\setunit{}%
   \printtext{%
     \ifbool{cbx:parens}%
       {\jpparenclose%
       \global\boolfalse{cbx:parens}}%
       {}}}%
  {\setunit{%
     \ifbool{cbx:parens}%
       {\jpparenclose%
       \global\boolfalse{cbx:parens}}%
       {}%
     \textcitedelim}}}%


%%% (author et al.year: pages) %%%
\renewbibmacro*{cite}{%
  \global\booltrue{cbx:warichu}%
  \usebibmacro*{check:samename}%
  \ifbool{cbx:samename}{% 同じ著者の引用が複数続く場合は区切り文字と出版年のみを表示
    \setunit{\compcitedelim}%
    \usebibmacro{cite:plabelyear+extradate}%
  }{%引用開始
  \ifboolexpr{
    test {\iffieldundef{related}}
    and
    test {\ifnameundef{labelname}}
    }{%著者も編者もrelatedでリンクもされていない場合
      \usebibmacro{noauthorcite}%
    }{%
      \ifnameundef{shortauthor}{%"NASA"のような略称の有無判定
        \ifnameundef{origauthor}{%再販著者情報がない場合
          \usebibmacro{cite:uniquename}%名前の出力
        }{%
          \printnames{origauthor}%再販著者情報がある場合、それを出力
        }%
      }{%
        \cbx@apa@ifnamesaved{%
          \printnames{shortauthor}%
        }{%
          \printnames[labelname]{author}%
          \addspace\printnames[sabrackets]{shortauthor}%
        }%
      }%
      \setunit{\printdelim{nameyeardelim}}% authorとyearの間のデリム
      \usebibmacro{cite:plabelyear+extradate}% yearの出力
      \usebibmacro{save:namehash}%
    }%
  \setunit{\multicitedelim}% 複数引用時のデリムの追加
  }%
}%

%% 新聞や雑誌といった誌名を割注内に表示する場合の処理（authorフィールドを省略する）
\newbibmacro*{noauthorcite}%
  {\iffieldundef{title}{}%
    {%タイトルを挿入したい場合はコメントアウトを削除する
      %\usebibmacro{title}{jekakko}{}%
    }%
  % 誌名
  \usebibmacro{title}{jedkakko}{journal}%
  \usebibmacro{yyyymmdd}
  \usebibmacro{vol+pages}}


% relatedtypeがreprintofの場合の処理
\newbibmacro*{cite:reprintof}%
{\iffieldequalstr{relatedtype}{reprintof}%
  {\entrydata*{\thefield{related}}%
    {\usebibmacro{cite:translationof}%
    \printtext[brackets]{\printdateextra}\space}%
  }{}%
}%
% relatedtypeがtranslationofの場合の処理
\newbibmacro*{cite:translationof}%
{\iffieldequalstr{relatedtype}{translationof}%
  {\entrydata*{\thefield{related}}%
    {\usebibmacro{cite:reprintof}%
    \usebibmacro{cite:origyear}%
    \printtext{\printdateextra}%
    \setunit{\printdelim{transeq}}%
    }
  }{}%
}%
% 再販情報のみ（origyear記載）があった場合の処理
\newbibmacro*{cite:origyear}%
{\iffieldundef{origyear}{}%
  {\usebibmacro{cite:translationof}%
  \printtext[brackets]{\printorigdate}%
  \setunit{\addthinspace}%
  }%
}%

% 翻訳や再版の場合の処理を含む出版年の処理 %apa 
\newbibmacro*{cite:plabelyear+extradate}%
  {\iffieldundef{year}%dateで設定されたyearがあるの場合の分岐
  %なければ印刷状態を出力
    {\iffieldundef{pubstate}%
      {\printlabeldateextra}%
      {\printfield{pubstate}}}%
    {\usebibmacro{cite:origyear}%再販情報のみ（origyear記載）があった場合
    %翻訳書・再録の場合
    \usebibmacro{cite:reprintof}%
    \usebibmacro{cite:translationof}%
    \printlabeldateextra%
  }}%

% citeauthorの場合の処理 apa.cbxのものを修正
\newbibmacro*{cite:author}{%
  \iffieldundef{related}{%
    \iffieldequals{namehash}{\cbx@lasthash}{%
      % Multiple cites in one command
      \setunit{\compcitedelim}%
      \usebibmacro{cite:plabelyear+extradate}%
    }{%
      % Single cite
      \ifnameundef{labelname}{%
        % No author/editor
        \usebibmacro{cite:noname}%
        \savefield{namehash}{\cbx@lasthash}%
      }{%
        % Normal cite
        \ifnameundef{shortauthor}{%
          \ifnameundef{origauthor}{% 著者名 日本語訳の書籍の場合は，原著者の名前を原語表記
            \usebibmacro{citecheck}%
          }{%
            \printnames{origauthor}% 再録の場合のオリジナル出力
          }%
        }{%
          \cbx@apa@ifnamesaved{%
            \printnames{shortauthor}%
          }{%
            \printnames[labelname]{author}%
            \addspace\printnames[sabrackets]{shortauthor}%
          }%
        }%
        \savefield{namehash}{\cbx@lasthash}%
      }%
    }%
    \setunit{\multicitedelim}%
  }{%
    \iffieldequalstr{relatedtype}{mvbook}{%
      \unspace%
      \printnames{labelname}%
    }{%
      \entrydata*{\thefield{related}}{%
        \usebibmacro{isJPorEN}%
        \usebibmacro{cite:author}%
      }%
    }%
  }%
}%
%%parenciteのかっこを全角に設定
%%% \DeclareCiteCommand{〈command〉}[〈wrapper〉]{〈precode〉}{〈loopcode〉}{〈sepcode〉}{〈postcode〉}
\DeclareCiteCommand{\parencite}[\mkbibjpparens]{%
  \usebibmacro{cite:init}%
  \usebibmacro{prenote}%
}{% loopcode
  \usebibmacro{citeindex}%
  \usebibmacro{cite}%
}{%
% sepcode
}{%
  \usebibmacro{postnote}%
}%

%% 引用時のコマンドの宣言等
\DeclareCiteCommand{\citeauthor}
  {\usebibmacro{cite:init}%
   \usebibmacro{prenote}}
  {\usebibmacro{citeindex}%
   \usebibmacro{cite:author}}%
  {}
  {\usebibmacro{postnote}}

\DeclareCiteCommand*{\parencite}[\mkbibjpparens]%
  {%\jpparenopen%
  \usebibmacro{cite:init}%
  \usebibmacro{prenote}}%
  {\usebibmacro{citeindex}%
  \usebibmacro{cite}}%
  {}%
  {\usebibmacro{postnote}}%
  %\jpparenclose}%

\DeclareMultiCiteCommand{\parencites}[\mkbibjpparens]{\parencite}
  {\setunit{\multicitedelim}}
\endinput